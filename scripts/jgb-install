#!/bin/bash
set -e

. jgb-helper
jgb_arch=$(uname -p)

help()
{
    echo "[Usage] jgb-install [-f FILE] [-h] [-p ARCH] <package>"
    echo "-f FILE 指定包含包列表的 JSON 文件"
    echo "-h display this help text, then exit"
    echo "-p ARCH 选择目标架构"
    exit 1
} >&2

while getopts  "f:hp:" opt; do
  case ${opt} in
    f)
      jgb_list_file=$OPTARG
      ;;
    h)
      help
      ;;
    p)
      jgb_arch=$OPTARG
      ;;
    ?)
      ;;
  esac
done

install_package()
{
    local pk_full_name=$1
    local pk=$(echo $pk_full_name | cut -d@ -f1)
    local variant=$(echo $pk_full_name | cut -d@ -f2 -s)
    local x_variant=
    if [ -n "$variant" ] ; then
      x_variant="_${variant}"
    fi
    local pk_file=${pk}${x_variant}.tar.gz
    for m in Debug Release ;
    do
        pk_file_path=${JGB_BUILD_DIR}/packages/$m/$jgb_arch/$pk/$pk_file
        if [ ! -f $pk_file_path ] ; then
          echo "not found: $pk_full_name"
          exit 1
        fi
        echo "extract: $pk_full_name"
        local dest_dir=${JGB_BUILD_DIR}/$m/$jgb_arch
        mkdir -p $dest_dir
        tar -C $dest_dir -xf $pk_file_path
    done
}

if [ -n "$jgb_list_file" ] ; then
  if [ -f "$jgb_list_file" ] ; then
      x=0
      while true;
      do
          pk_full_name=$(jq -r .packages[$x] $jgb_list_file)
          if [ $pk_full_name != null ] ; then
              install_package $pk_full_name
              ((++x))
          else
              break
          fi
      done
  fi
fi

shift $((OPTIND - 1))
pk_full_name=$1
if [ -n "$pk_full_name" ] ; then
    install_package $pk_full_name
fi
