#!/bin/bash
# jgb-build
#
# Copyright (C) 2025 Beijing Zohetec Co., Ltd
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

goto_top_dir()
{
  while true;
  do
      if [ -f CMakeLists.txt ] ; then
        if grep -q "^project" CMakeLists.txt ; then
          echo "top directory: $PWD"
          JGB_BUILD_BACK_END="cmake"
          break
        fi
      elif [ -f configure.ac ] || [ -x configure ] ; then
        echo "top directory: $PWD"
        JGB_BUILD_BACK_END="autoconf"
        break
      elif [ -f Makefile ] && [ ! -f ../Makefile ] ; then
        echo "top directory: $PWD"
        JGB_BUILD_BACK_END="makefile"
        break
      fi

      if [ "$PWD" != / ] ; then
        cd ..
      else
        echo "[ERR] find top directory failed."
        exit 1
      fi
  done
}

jgb_pushd()
{
  pushd $1 > /dev/null
}

jgb_popd()
{
  popd > /dev/null
}

jgb_acquire_lock()
{
    if mkdir "$JGB_BUILD_LOCK_DIR" 2>/dev/null; then
        echo "Lock acquired."
        jgb_owned_lock=yes
    fi
}

jgb_release_lock()
{
    if [ "$jgb_owned_lock" == yes ] ; then
        rmdir "$JGB_BUILD_LOCK_DIR"
        echo "Lock released."
    fi
}

jgb_wait_lock()
{
    while true ; do
        jgb_acquire_lock
        if [ "$jgb_owned_lock" == yes ] ; then
            return 0
        else
            echo "Waiting for lock..."
            sleep 1
        fi
    done
}

trap jgb_release_lock EXIT

if [ -v JGB_BUILD_DEBUG ] ; then
  set -x
fi

# jgb-build 全局工作目录
JGB_BUILD_DIR=$HOME/jgb-build.dir
# jgb-build 配置文件目录
JGB_BUILD_CONFIG_DIR=$JGB_BUILD_DIR/conf.dir
# 源码包下载地址
JGB_BUILD_UPSTREAM_FILE=$JGB_BUILD_CONFIG_DIR/upstream
# 缓存下载文件目录
JGB_BUILD_CACHE_DIR=$JGB_BUILD_DIR/cache.dir
JGB_BUILD_LOCK_DIR=$JGB_BUILD_DIR/lock.dir
