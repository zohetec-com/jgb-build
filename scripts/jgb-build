#!/bin/bash
# jgb-build
#
# Copyright (C) 2025 Beijing Zohetec Co., Ltd
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.
set -e
#set -x

JGB_BUILD_SAVED="JGB_BUILD_TYPE JGB_BUILD_COVERAGE JGB_BUILD_SANITIZE JGB_BUILD_WALL JGB_BUILD_VERBOSE JGB_BUILD_INSTALL"
JGB_BUILD_OPTIONS="chiRst:vw"
JGB_BUILD_BACK_END=
JGB_BUILD_BUILD_DIR="jgb.build"
# TODO: 区分不同硬件平台，c 库版本
JGB_BUILD_DESTDIR="$HOME/jgb.install"
JGB_BUILD_CONFIG="$JGB_BUILD_BUILD_DIR/jgb-config"

preset()
{
    JGB_BUILD_TYPE="Release"
    JGB_BUILD_COVERAGE=no
    JGB_BUILD_SANITIZE=no
    JGB_BUILD_WALL=no
    JGB_BUILD_VERBOSE=no
    JGB_BUILD_INSTALL=no
}

save_set()
{
    mkdir -p $JGB_BUILD_BUILD_DIR
    echo -n > $JGB_BUILD_CONFIG
    for p in $JGB_BUILD_SAVED ;
    do
      eval "echo $p=\"\$$p\"" >> $JGB_BUILD_CONFIG
    done
}

help()
{
    echo "[用法] jgb-build [-chiRst:vw]"
    echo "-c 启用代码覆盖编译选项"
    echo "-h 打印帮助信息"
    echo "-i 执行安装"
    echo "-R 先作清除，再重新构建"
    echo "-s 启用 sanitize"
    echo "-t [Release|Debug] 选择构建类型"
    echo "-v 使能 VERBOSE"
    echo "-w 启用编译警告选项"
    exit 1
} >&2

. jgb-helper

goto_top_dir
preset

while getopts $JGB_BUILD_OPTIONS opt; do
  case ${opt} in
    h)
      help
      ;;
    R)
      JGB_BUILD_REBULD=yes
      ;;
  esac
done

if [ -f CMakeLists.txt ] ; then
  JGB_BUILD_BACK_END="cmake"
fi

if [ "$JGB_BUILD_REBULD" == yes ] ; then
  if [ "$JGB_BUILD_BACK_END" == "cmake" ] ; then
    rm -rf CMakeFiles CMakeCache.txt $JGB_BUILD_BUILD_DIR
  fi
fi

# 载入记忆配置
if [ -f $JGB_BUILD_CONFIG ] ; then
  . $JGB_BUILD_CONFIG
fi

# https://stackoverflow.com/questions/2189281/how-to-call-getopts-in-bash-multiple-times
unset OPTIND
while getopts $JGB_BUILD_OPTIONS opt; do
  case ${opt} in
    c)
      JGB_BUILD_COVERAGE=yes
      ;;
    h)
      ;;
    i)
      JGB_BUILD_INSTALL=yes
      ;;
    s)
      JGB_BUILD_SANITIZE=yes
      ;;
    t)
      JGB_BUILD_TYPE=${OPTARG}
      ;;
    v)
      JGB_BUILD_VERBOSE=yes
      ;;
    w)
      JGB_BUILD_WALL=yes
      ;;
    ?)
      ;;
  esac
done

# 保存记忆
save_set

export CFLAGS="-I${JGB_BUILD_DESTDIR}/include -I${JGB_BUILD_DESTDIR}/usr/local/include"
export CXXFLAGS="-I${JGB_BUILD_DESTDIR}/include -I${JGB_BUILD_DESTDIR}/usr/local/include"
export LDFLAGS="-L${JGB_BUILD_DESTDIR}/lib -L${JGB_BUILD_DESTDIR}/usr/local/lib"

JGB_BUILD_CMAKE_OPTIONS="-DCMAKE_BUILD_TYPE=$JGB_BUILD_TYPE"

if [ "$JGB_BUILD_TYPE" == "Debug" ] ; then
  CFLAGS="$CFLAGS -DDEBUG -g -O0"
  CXXFLAGS="$CXXFLAGS -DDEBUG -g -O0"
fi

if [ "$JGB_BUILD_COVERAGE" == yes ] ; then
  CFLAGS="$CFLAGS -fprofile-arcs -ftest-coverage"
  CXXFLAGS="$CXXFLAGS -fprofile-arcs -ftest-coverage"
fi

if [ "$JGB_BUILD_SANITIZE" == yes ] ; then
  CFLAGS="$CFLAGS -fsanitize=address"
  CXXFLAGS="$CXXFLAGS -fsanitize=address"
  LDFLAGS="$LDFLAGS -fsanitize=address"
fi

if [ "$JGB_BUILD_WALL" == yes ] ; then
  CFLAGS="$CFLAGS -Werror -Wall -Wextra"
  CXXFLAGS="$CXXFLAGS -Werror -Wall -Wextra"
fi

if [ "$JGB_BUILD_VERBOSE" == yes ] ; then
  JGB_BUILD_CMAKE_OPTIONS="$JGB_BUILD_CMAKE_OPTIONS -DCMAKE_VERBOSE_MAKEFILE=ON"
fi

if [ "$JGB_BUILD_BACK_END" == "cmake" ] ; then
  cmake $JGB_BUILD_CMAKE_OPTIONS -S . -B $JGB_BUILD_BUILD_DIR
  cmake  --build $JGB_BUILD_BUILD_DIR
  if [ "$JGB_BUILD_INSTALL" == yes ] ; then
    cmake --install $JGB_BUILD_BUILD_DIR --prefix=$JGB_BUILD_DESTDIR
  fi
fi
