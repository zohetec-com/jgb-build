#!/bin/bash
# jgb-build
#
# Copyright (C) 2025 Beijing Zohetec Co., Ltd
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.
set -e
. jgb-helper

jgb_date_short=$(date +%Y%m%d)
jgb_operation="copy"
jgb_archs=""

help()
{
    echo "[Usage] jgb-dist [-d date] [-D] [-f FILE] [-h] [-p ARCH] [-v version] <release>"
    echo "-d date 指定日期，缺省为当前日期"
    echo "-D 删除已发布(dist)的文件"
    echo "-f FILE 指定组装清单文件"
    echo "-h display this help text, then exit"
    echo "-p ARCH 选择目标架构"
    #echo "-u 发布文件，即从 local 目录拷贝到 dist 目录"
    echo "-v version 指定版本号"
    exit 1
} >&2

get_suffixes()
{
    for format in $jgb_formats;
    do
      type=$(echo $format | jq -r .type)
      if [ "$type" == tar ] ; then
        compress=$(echo $format | jq -r .compress)
        for cmp in $compress;
        do
          if [ $cmp == gzip ] ; then
            suffix=gz
          elif [ $cmp == bzip2 ] ; then
            suffix=bz2
          else
            echo "unknown compress type: $cmp"
            exit 1
          fi
          jgb_suffixes+=" tar.$suffix"
        done
      else
        jgb_suffixes+=" $type"
      fi
    done
}

while getopts  "d:Df:hp:v:" opt; do
  case ${opt} in
    d)
      jgb_date=$OPTARG
      ;;
    D)
      jgb_operation="delete"
      ;;
    f)
      jgb_list_file=$OPTARG
      ;;
    h)
      help
      ;;
    p)
      jgb_archs+=" $OPTARG"
      ;;
    t)
      jgb_suffixes+=" $OPTARG"
      ;;
    v)
      jgb_version=$OPTARG
      ;;
    ?)
      ;;
  esac
done

if [ -n "$jgb_list_file" ] ; then
    [ -f $jgb_list_file ]

    jgb_release=$(jq -r .release $jgb_list_file)
    jgb_version=$(jq -r .version $jgb_list_file)

    [ $jgb_release != null ]
    [ $jgb_version != null ]

    if [ -z "$jgb_archs" ] ; then
      jgb_archs=$(jq -r .architectures[] $jgb_list_file)
    fi

    if [ -z "$jgb_suffixes" ] ; then
      jgb_formats=$(jq -c .format[] $jgb_list_file)
      get_suffixes
    fi
else
    shift $((OPTIND - 1))
    jgb_release=$1
fi

[ -n "$jgb_release" ] || help
[ -n "$jgb_version" ] || help

for m in Debug Release;
do
  for arch in $jgb_archs;
  do
    for suffix in $jgb_suffixes;
    do
        src_file=${jgb_release}_V${jgb_version}_${jgb_date_short}_${arch}.${suffix}
        src_dir=${JGB_BUILD_DIR}/local/releases/${jgb_release}/$m
        src_file_path=$src_dir/$src_file
        dst_dir=${JGB_BUILD_DIR}/dist/releases/${jgb_release}/$m
        dst_file_path=$dst_dir/$src_file
        if [ $jgb_operation == "copy" ] ; then
            if [ -f $src_file_path ] ; then
                mkdir -p $dst_dir
                /bin/cp -v $src_file_path $dst_dir
            fi
        elif [ $jgb_operation == "delete" ] ; then
            if [ -f $dst_file_path ] ; then
                rm -v $dst_file_path
            fi
        fi
    done
  done
done
