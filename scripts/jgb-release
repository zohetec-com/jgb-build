#!/bin/bash
set -e

. jgb-helper

while getopts f:p: opt; do
  case ${opt} in
    f)
      jgb_list_file=$OPTARG
      ;;
    p)
      jgb_arch=$OPTARG
      ;;
    ?)
      ;;
  esac
done

jgb_release=$(jq -r .release $jgb_list_file)
jgb_version=$(jq -r .version $jgb_list_file)
jgb_exclude=$(jq -r .exclude $jgb_list_file)

if [ -n "$jgb_exclude" ] ; then
  [ -r $jgb_exclude ]
  tar_opt_extra="-X $jgb_exclude"
fi

if [ -z "$jgb_arch" ] ; then
  jgb_arch=$(uname -p)
fi

if [ "$jgb_arch" == arm64 ] ; then
  jgb_arch=aarch64
fi

for m in Debug Release
do
  rm $m -rf
  mkdir -p $m
  x=0
  while true;
  do
    pk=$(jq -r .packages[$x] $jgb_list_file)
    if [ $pk != null ] ; then
        pk_file=${pk}.tar.gz
        pk_file_path=${JGB_BUILD_DIR}/package/$m/$jgb_arch/$pk/$pk_file
        if [ ! -f $pk_file_path ] ; then
          echo "not found: $pk"
          exit 1
        fi
        echo "extract: $pk"
        tar -C $m -xf $pk_file_path $tar_opt_extra
        ((++x))
    else
        break
    fi
  done
  chksum_file=$(mktemp /tmp/jgb-release.XXXX)
  cd $m
  find . -type f  -exec sha256sum {} \; > $chksum_file
  cd ..
  mv $chksum_file $m/sha256sum.txt
  re_file=${jgb_release}_V${jgb_version}_$(date +%Y%m%d)_${jgb_arch}.tar.gz
  re_file_short=${jgb_release}_${jgb_arch}.tar.gz
  re_dir=${JGB_BUILD_DIR}/release/${jgb_release}/$m/$jgb_arch
  re_file_path=$re_dir/$re_file
  re_file_short_path=$re_dir/$re_file_short
  mkdir -p $re_dir
  tar -C $m -czf $re_file_path .
  ln -sf $re_file $re_file_short_path
  echo created: $re_file_path
done
